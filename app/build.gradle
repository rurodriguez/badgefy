apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        applicationId "com.ruro.badgefy"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "env"
    productFlavors {
        dev {
            dimension "env"
            applicationId "com.ruro.badgefy.dev"
        }

        prod {
            dimension "env"
            applicationId "com.ruro.badgefy"
        }
    }
}

/*
*
* creating the icon overlay task for each build variant
*
* */
def versionBuild = 1
def createdTasks = []
android.applicationVariants.all { variant ->
    def buildType = variant.buildType.name
    def flavor = ""
    variant.productFlavors.each { variantFlavor ->
        flavor = variantFlavor.name
        def taskName = "addIconOverlay${flavor}${buildType}Task"

        // create the task only if it has not been created before
        if (!createdTasks.contains(taskName)) {
            createdTasks.add taskName
            tasks.create([name: taskName, type: Exec], {
                def cornerBackgroundColor
                def textColor
                def shadowColor

                if (flavor.equals("dev")) {
                    cornerBackgroundColor = "#f8e543" //corner background color of the ribbon for dev flavor
                    textColor = "#000000" //text color of the ribbon for dev flavor
                    shadowColor = "#eeeeee" //shadow color of the ribbon for dev flavor

                }
                else {
                    cornerBackgroundColor = "#a5238f" //corner background color of the ribbon for NON dev flavor
                    textColor = "#ffffff" //text  color of the ribbon for NON dev flavor
                    shadowColor = "#eeeeee" //shadow color of the ribbon for NON dev flavor
                }

                commandLine '/bin/bash', "./add_icon_overlay.sh", "${versionBuild}", "${flavor}", "${buildType}", "${cornerBackgroundColor}", "${textColor}", "${shadowColor}"
            })
        }
    }
}

/*
* gnerateDevDebugResources depends on addIconOverlayDevDebugTask
*
* this is the only way I found where the launcher icons are modfied
* BEFORE processed (generateXXResources)
* */

tasks.whenTaskAdded { task ->
    def taskName = task.name
    def buildType = ""
    def flavor = ""
    def buildVariant = ""
    if (taskName.startsWith("generate") && taskName.endsWith("Resources") && !taskName.contains("Release")) {
        buildVariant = taskName.replace("generate", "").toLowerCase()
        buildVariant = buildVariant.replace("Resources", "")
    }

    android.applicationVariants.all { variant ->
        if (buildVariant.contains(variant.buildType.name)) {
            buildType = variant.buildType.name
            variant.productFlavors.each { variantFlavor ->
                if (buildVariant.contains(variantFlavor.name)) {
                    flavor = variantFlavor.name
                    def t = tasks["addIconOverlay${flavor}${buildType}Task"]
                    if (taskName.startsWith("generate")) {
                        task.dependsOn t
                    }
                }
            }
        }
    }
}

dependencies {
    api 'com.android.support:appcompat-v7:28.0.0'
}
